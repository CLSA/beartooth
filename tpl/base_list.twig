{##
 # base_list.twig
 # 
 # Generic list widget.
 # @author Patrick Emond <emondpd@mcmaster.ca>
 # @param int parent_id When embedded, the parent widget's id
 # @param string heading The list's heading (can be an empty string).
 # @param boolean checkable Whether the list should allow items to be selected.
 # @param boolean viewable Whether the list should allow items to be viewed.
 # @param boolean editable Whether the list should allow items to be edited.
 # @param boolean removable Whether the list should allow items to be removed.
 # @param int items_per_page The maximum number of items to show at once.
 # @param array columns An array of columns.  Every item in the array must have the following:
                     'id' => a unique id identifying the column
                     'name' => the name to display in in the column header
                     'sortable' => whether or not the list can be sorted by the column
 # @param array rows An array of items.  Every item in the array must have the following:
                     'id' => a unique identifying id
                     'columns' => an array of values for each column listed in the columns array
 # @param int number_of_items The total number of items (not visible, total).
 # @param int page The page to display.
 # @param string sort_column The column id to sort by (use an empty string for no sorting)
 # @param int sort_desc Whether to sort descending or ascending
 # @param int max_page The maximum number of pages possible given the total number of items.
 #}
{% extends "widget.twig" %}
{% block widget %}
<script type="text/javascript">
// make button icons
$( function() {
  $( ".{{ widget_full_name }}_sortable" ).button( {
    text: true,
    icons: {
      primary: "ui-icon-triangle-2-n-s"
    }
  } )
} );
$( function() {
  $( ".{{ widget_full_name }}_sort" ).button( {
    text: true,
    icons: {
      primary: "ui-icon-triangle-1-s"
    }
  } )
} );
$( function() {
  $( ".{{ widget_full_name }}_sort_desc" ).button( {
    text: true,
    icons: {
      primary: "ui-icon-triangle-1-n"
    }
  } )
} );
{% if checkable %}
$( function() {
  $( ".{{ widget_full_name }}_check" ).button( {
    text: false,
    icons: {
      primary: "ui-icon-check"
    }
  } )
} );
{% endif %}
{% if viewable %}
$( function() {
  $( ".{{ widget_full_name }}_view" ).button( {
    text: false,
    icons: {
      primary: "ui-icon-document"
    }
  } )
} );
{% endif %}
{% if editable %}
$( function() {
  $( ".{{ widget_full_name }}_edit" ).button( {
    text: false,
    icons: {
      primary: "ui-icon-pencil"
    }
  } )
} );
{% endif %}
{% if removable %}
$( function() {
  $( ".{{ widget_full_name }}_remove" ).button( {
    text: false,
    icons: {
      primary: "ui-icon-closethick"
    }
  } )
} );
{% endif %}

// stripe the table
$( function() {
  $(".{{ widget_full_name }}_table tbody tr").mouseover( function() { $(this).addClass( "ui-widget-header" ); } );
  $(".{{ widget_full_name }}_table tbody tr").mouseout( function() { $(this).removeClass( "ui-widget-header" ); } );
} );

// column sort functions
$( function() {
  $( "th.sortable" ).click( function() {
    var args = new Object();
    {% if parent_id|default(false) %}args.id = {{ parent_id }};{% endif %}
    args.page = {{ page }};
    args.sort_column = $(this).attr("id");
    args.sort_desc = {{ sort_desc ? 0 : 1 }};
    slot_load( get_slot( $(this) ), "{{ widget_full_name }}", args );
  } )
} );

// column button functions
{% if viewable %}
$( function() {
  $( ".{{ widget_full_name }}_view" ).click( function() {
    var id_string = $(this).attr( 'id' );
    id_string = id_string.substring( id_string.lastIndexOf('_') + 1 );
    id = parseInt( id_string );
    slot_load( get_slot( $(this) ), '{{ widget_subject }}_view', { "id": id } );
  } )
} );
{% endif %}
{% if editable %}
$( function() {
  $( ".{{ widget_full_name }}_edit" ).click( function() {
    var id_string = $(this).attr( 'id' );
    id_string = id_string.substring( id_string.lastIndexOf('_') + 1 );
    id = parseInt( id_string );
    slot_load( get_slot( $(this) ), '{{ widget_subject }}_view', { "id": id } );
  } )
} );
{% endif %}
{% if removable %}
$( function() {
  $( ".{{ widget_full_name }}_remove" ).click( function() {
    var id_string = $(this).attr( 'id' );
    id_string = id_string.substring( id_string.lastIndexOf('_') + 1 );
    id = parseInt( id_string );
    slot_load( get_slot( $(this) ), '{{ widget_subject }}_remove', { "id": id } );
  } )
} );
{% endif %}


// create button sets
$( function() { $( "#{{ widget_full_name }}_check_none" ).button().parent().buttonset() } );
$( function() { $( "#{{ widget_full_name }}_page_next" ).button().parent().buttonset() } );

// check button functions
$( function() {
  $( "#{{ widget_full_name }}_check_all" ).click( function() {
    $( "input[id*={{ widget_full_name }}_check_]" ).attr( "checked", true );
  } )
} );
$( function() {
  $( "#{{ widget_full_name }}_check_none" ).click( function() {
    $( "input[id*={{ widget_full_name }}_check_]" ).attr( "checked", false );
  } )
} );
$( function() {
  $( "#{{ widget_full_name }}_check_invert" ).click( function() {
    $( "input[id*={{ widget_full_name }}_check_]" ).each( function() {
      $( this ).attr( 'checked', this.checked ? false : true );
    } )
  } )
} );

// page button functions
$( function() {
  $( "#{{ widget_full_name }}_page_prev" ).click( function() {
    var args = new Object();
    {% if parent_id|default(false) %}args.id = {{ parent_id }};{% endif %}
    args.page = {{ page - 1 }};
    args.sort_column = "{{ sort_column }}";
    args.sort_desc = {{ sort_desc ? 1 : 0 }};
    slot_load( get_slot( $(this) ), "{{ widget_full_name }}", args );
  } )
} );
$( function() {
  $( "#{{ widget_full_name }}_page_next" ).click( function() {
    var args = new Object();
    {% if parent_id|default(false) %}args.id = {{ parent_id }};{% endif %}
    args.page = {{ page + 1 }};
    args.sort_column = "{{ sort_column }}";
    args.sort_desc = {{ sort_desc ? 1 : 0 }};
    slot_load( get_slot( $(this) ), "{{ widget_full_name }}", args );
  } )
} );

</script>
<table class="{{ widget_full_name }}_table">
  {% if rows | count %}
  <thead class="ui-widget-header">
    <tr>
      {% if checkable %}
      <th><div class="ui-icon ui-icon-check" style="padding:2px"></div></th>
      {% endif %}
      {% for column in columns %}
      <th{{ column.sortable ? ' class="sortable"' : '' }} id="{{ column.id }}">
        {% if column.sortable %}
        {% if column.id == sort_column %}
          <div class="{{ widget_full_name }}_sort{{ sort_desc ? '_desc' : '' }}">{{ column.name }}</div>
        {% else %}
          <div class="{{ widget_full_name }}_sortable">{{ column.name }}</div>
        {% endif %}
        {% else %}
        {{ column.name }}
        {% endif %}
      </th>
      {% endfor %}
      {% if viewable %}
      <th width="1%"></th>
      {% endif %}
      {% if editable %}
      <th width="1%"></th>
      {% endif %}
      {% if removable %}
      <th width="1%"></th>
      {% endif %}
  </thead>
  <tbody>
    {% for row in rows %}
    <tr>
      {% if checkable %}
      <td><input type="checkbox" id="{{ widget_full_name }}_check_{{ row.id }}" /></td>
      {% endif %}
      {% for column in row.columns %}
      <td {% if columns[loop.index0].align|default(false) %}align="{{ columns[loop.index0].align }}" {% endif %}
          style="font-weight: normal">{{ column }}</td>
      {% endfor %}
      {% if viewable %}
      <td><button class="{{ widget_full_name }}_view"
                  id="{{ widget_full_name }}_view_{{ row.id }}">view</button></td>
      {% endif %}
      {% if editable %}
      <td><button class="{{ widget_full_name }}_edit"
                  id="{{ widget_full_name }}_view_{{ row.id }}">edit</button></td>
      {% endif %}
      {% if removable %}
      <td><button class="{{ widget_full_name }}_remove"
                  id="{{ widget_full_name }}_remove_{{ row.id }}">remove</button></td>
      {% endif %}
    </tr>
    {% endfor %}
  </tbody>
  {% endif %}
  <tfoot class="ui-widget-header">
    <tr>
      <th colspan="0">
        {% if checkable %}
        <span>
          Check boxes:
          <button style="width:70px" id="{{ widget_full_name }}_check_all">all</button>
          <button style="width:70px" id="{{ widget_full_name }}_check_none">none</button>
          <button style="width:70px" id="{{ widget_full_name }}_check_invert">invert</button>
        </span>
        <span style="margin-left:20px">
        {% endif %}
        {% if rows | count %}
        {% set item_from = ( page - 1 ) * items_per_page + 1 %}
        {% set item_to = item_from + rows | count - 1 %}
        Viewing: {{ item_from }} to {{ item_to }} of {{ number_of_items }}
        {% else %}
        No records found.
        {% endif %}
        {% if items_per_page < number_of_items %}
        <span style="margin-left:20px">
        <span>
          Page:
          <button style="width:70px"
                  id="{{ widget_full_name }}_page_prev"
                  {{ 1 == page ? 'disabled' : '' }}>prev</button>
          <button style="width:70px"
                  id="{{ widget_full_name }}_page_next"
                  {{ max_page == page ? 'disabled' : '' }}>next</button>
        </span>
        {% endif %}
      </th>
    </tr>
  </tfoot>
</table>
{% endblock %}
