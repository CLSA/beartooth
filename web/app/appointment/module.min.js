cenozoApp.defineModule({name:"appointment",dependencies:"site",models:["add","list","view"],create:module=>{angular.extend(module,{identifier:{parent:[{subject:"interview",column:"interview_id",friendly:"qnaire"},{subject:"participant",column:"participant.uid"}]},name:{singular:"appointment",plural:"appointments",possessive:"appointment's"},columnList:{datetime:{type:"datetime",title:"Date & Time"},formatted_user_id:{type:"string",title:"Interviewer",isIncluded:function($state,model){return"home"==$state.params.type||"home"==model.type}},address_summary:{type:"string",title:"Address",isIncluded:function($state,model){return"home"==$state.params.type||"home"==model.type}},appointment_type_id:{column:"appointment_type.name",type:"string",title:"Special Type",help:"Identified whether this is a special appointment type.  If blank then it is considered "+'a "regular" appointment.'},state:{type:"string",title:"State",help:"Will either be completed, rescheduled, cancelled, upcoming or passed"}},defaultOrder:{column:"datetime",reverse:true}});module.addInputGroup("",{datetime:{title:"Date & Time",type:"datetime",min:"now",help:"Cannot be changed once the appointment has passed."},participant:{column:"participant.uid",title:"Participant",type:"string",isExcluded:"add",isConstant:true},qnaire:{column:"qnaire.name",title:"Questionnaire",type:"string",isExcluded:"add",isConstant:true},user_id:{column:"appointment.user_id",title:"Interviewer",type:"lookup-typeahead",typeahead:{table:"user",select:'CONCAT( user.first_name, " ", user.last_name, " (", user.name, ")" )',where:["user.first_name","user.last_name","user.name"]},help:"The interviewer the appointment is to be scheduled with."},address_id:{title:"Address",type:"hidden",help:"The address of the home appointment."},state:{title:"State",type:"string",isExcluded:"add",isConstant:true,help:"One of upcoming, passed, completed or cancelled"},appointment_type_id:{title:"Special Type",type:"enum",isExcluded:"view",help:"Identified whether this is a special appointment type.  If blank then it is considered "+'a "regular" appointment.'},disable_mail:{title:"Disable Email Reminder(s)",type:"boolean",isExcluded:"view",help:"If selected then no automatic email reminders will be created for this appointment."},appointment_type:{column:"appointment_type.name",title:"Special Type",type:"string",isExcluded:"add",isConstant:true,help:"Identified whether this is a special appointment type.  If blank then it is considered "+'a "regular" appointment.'},type:{column:"qnaire.type",type:"hidden"}});if(angular.isDefined(cenozoApp.module("participant").actions.notes)){module.addExtraOperation("view",{title:"Notes",operation:async function($state,model){await $state.go("participant.notes",{identifier:"uid="+model.viewModel.record.participant})}})}if(angular.isDefined(module.actions.calendar)){module.addExtraOperation("calendar",{id:"home-appointment-button",title:"Home Appointment",operation:async function($state,model){await $state.go("appointment.calendar",{type:"home",identifier:model.site.getIdentifier()})},classes:"home-appointment-button"})}if(angular.isDefined(module.actions.calendar)){module.addExtraOperation("calendar",{id:"site-appointment-button",title:"Site Appointment",operation:async function($state,model){await $state.go("appointment.calendar",{type:"site",identifier:model.site.getIdentifier()})},classes:"site-appointment-button"})}if(angular.isDefined(module.actions.calendar)){module.addExtraOperation("view",{title:"Appointment Calendar",operation:async function($state,model){await $state.go("appointment.calendar",{type:model.type,identifier:model.site.getIdentifier()})}})}module.addExtraOperation("view",{title:"Cancel Appointment",isDisabled:function($state,model){return"passed"!=model.viewModel.record.state},operation:async function($state,model){await model.viewModel.cancelAppointment();await model.viewModel.onView()}});function getEventFromAppointment(appointment,timezone){if(angular.isDefined(appointment.start)&&angular.isDefined(appointment.end)){return appointment}else{var date=moment(appointment.datetime);var offset=moment.tz.zone(timezone).utcOffset(date.unix());if(date.tz(timezone).isDST())offset+=-60;var identifier=appointment.getIdentifier();var event={getIdentifier:function(){return identifier},title:(appointment.uid?appointment.uid:"new appointment")+(appointment.postcode?" ["+appointment.postcode.substr(0,3)+"]":"")+(appointment.username?" ("+appointment.username+")":""),start:moment(appointment.datetime).subtract(offset,"minutes"),end:moment(appointment.datetime).subtract(offset,"minutes").add(appointment.duration,"minute"),color:appointment.color,help:appointment.help};if(null!=appointment.outcome){if(["rescheduled","cancelled"].includes(appointment.outcome)){event.className="calendar-event-cancelled"}event.textColor="lightgray"}return event}}cenozo.providers.directive("cnAppointmentAdd",["CnAppointmentModelFactory","CnSession","CnHttpFactory","CnModalConfirmFactory",function(CnAppointmentModelFactory,CnSession,CnHttpFactory,CnModalConfirmFactory){return{templateUrl:module.getFileUrl("add.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnAppointmentModelFactory.instance();var cnRecordAddScope=null;$scope.$on("cnRecordAdd ready",function(event,data){cnRecordAddScope=data});$scope.model.calendarModel.settings.dayClick=function(date){if(!date.isBefore(moment(),"day")){var dateString=date.format("YYYY-MM-DD")+"T12:00:00";var datetime=moment.tz(dateString,CnSession.user.timezone).tz("UTC");cnRecordAddScope.record.datetime=datetime.format();cnRecordAddScope.formattedRecord.datetime=CnSession.formatValue(datetime,"datetime",true);$scope.$apply()}};$scope.model.addModel.afterNew(async function(){cnRecordAddScope.baseSaveFn=cnRecordAddScope.save;cnRecordAddScope.save=async function(){var response=await CnHttpFactory.instance({path:"interview/"+$scope.model.getParentIdentifier().identifier,data:{select:{column:["missed_appointment"]}}}).get();var proceed=true;if(response.data.missed_appointment){var proceed=await CnModalConfirmFactory.instance({title:"Cancel Missed Appointment?",message:"There already exists a passed appointment for this interview, "+"do you wish to cancel it and create a new one?"}).show()}if(proceed)await cnRecordAddScope.baseSaveFn()};await $scope.model.metadata.getPromise();$scope.model.addModel.heading=$scope.model.type.ucWords()+" Appointment Details";var inputArray=cnRecordAddScope.dataArray[0].inputArray;inputArray.findByProperty("key","user_id").type="home"==$scope.model.type?"lookup-typeahead":"hidden";inputArray.findByProperty("key","address_id").type="home"==$scope.model.type?"enum":"hidden";var identifier=$scope.model.getParentIdentifier();if(angular.isDefined(identifier.subject)&&angular.isDefined(identifier.identifier)){var response=await CnHttpFactory.instance({path:identifier.subject+"/"+identifier.identifier,data:{select:{column:["qnaire_id"]}}}).get();var appointmentTypeIndex=inputArray.findIndexByProperty("key","appointment_type_id");inputArray[appointmentTypeIndex].enumList=angular.copy($scope.model.metadata.columnList.appointment_type_id.qnaireList[response.data.qnaire_id]);if(angular.isUndefined(inputArray[appointmentTypeIndex].enumList)){inputArray[appointmentTypeIndex].enumList=[]}var emptyIndex=inputArray[appointmentTypeIndex].enumList.findIndexByProperty("name","(empty)");if(null==emptyIndex){inputArray[appointmentTypeIndex].enumList.unshift({value:"cnRecordAdd"==cnRecordAddScope.directive?undefined:"",name:"(empty)"})}}})}}}]);cenozo.providers.directive("cnAppointmentCalendar",["CnAppointmentModelFactory","CnSession",function(CnAppointmentModelFactory,CnSession){return{templateUrl:module.getFileUrl("calendar.tpl.html"),restrict:"E",scope:{model:"=?",preventSiteChange:"@"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnAppointmentModelFactory.instance();$scope.model.calendarModel.heading=$scope.model.site.name.ucWords()+" - "+("home"==$scope.model.type&&"interviewer"==CnSession.role.name?"Personal ":"")+$scope.model.type.ucWords()+" Appointment Calendar"},link:function(scope,element){var homeListener=scope.$watch(function(){return element.find("#home-appointment-button").length},function(length){if(0<length){var homeButton=element.find("#home-appointment-button");homeButton.addClass("home"==scope.model.type?"btn-warning":"btn-default");homeButton.removeClass("home"==scope.model.type?"btn-default":"btn-warning");homeListener()}});var siteListener=scope.$watch(function(){return element.find("#site-appointment-button").length},function(length){if(0<length){var siteButton=element.find("#site-appointment-button");siteButton.addClass("site"==scope.model.type?"btn-warning":"btn-default");siteButton.removeClass("site"==scope.model.type?"btn-default":"btn-warning");siteListener()}})}}}]);cenozo.providers.directive("cnAppointmentList",["CnAppointmentModelFactory",function(CnAppointmentModelFactory){return{templateUrl:module.getFileUrl("list.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnAppointmentModelFactory.instance()}}}]);cenozo.providers.directive("cnAppointmentView",["CnAppointmentModelFactory","CnSession","CnModalConfirmFactory",function(CnAppointmentModelFactory,CnSession,CnModalConfirmFactory){return{templateUrl:module.getFileUrl("view.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope,$element){if(angular.isUndefined($scope.model))$scope.model=CnAppointmentModelFactory.instance();var cnRecordViewScope=null;$scope.$on("cnRecordView ready",function(event,data){cnRecordViewScope=data});if($scope.model.getEditEnabled()){$scope.model.calendarModel.settings.dayClick=async function(date){if("appointment"==$scope.model.getSubjectFromState()&&"view"==$scope.model.getActionFromState()&&!date.isBefore(moment(),"day")){var dateString=date.format("YYYY-MM-DD")+"T12:00:00";var datetime=moment.tz(dateString,CnSession.user.timezone).tz("UTC");if(!datetime.isAfter(moment()))datetime.hour(moment().hour()+1);if(!datetime.isSame(moment($scope.model.viewModel.record.datetime))){var formattedDatetime=CnSession.formatValue(datetime,"datetime",true);var response=await CnModalConfirmFactory.instance({title:"Reschedule Appointment",message:"Are you sure you wish to reschedule the appointment to "+formattedDatetime+"?"}).show();if(response){$scope.model.viewModel.record.datetime=datetime.format();$scope.model.viewModel.formattedRecord.datetime=formattedDatetime;cnRecordViewScope.patch("datetime");$element.find("div.calendar").fullCalendar("refetchEvents")}}}}}$scope.model.viewModel.afterView(async function(){var inputArray=cnRecordViewScope.dataArray[0].inputArray;inputArray.findByProperty("key","user_id").type="home"==$scope.model.type?"lookup-typeahead":"hidden";inputArray.findByProperty("key","address_id").type="home"==$scope.model.type?"enum":"hidden";await $scope.model.metadata.getPromise();$scope.model.viewModel.heading=$scope.model.type.ucWords()+" Appointment Details"})}}}]);cenozo.providers.factory("CnAppointmentAddFactory",["CnBaseAddFactory","CnHttpFactory",function(CnBaseAddFactory,CnHttpFactory){var object=function(parentModel){CnBaseAddFactory.construct(this,parentModel);this.onNew=async function(record){var parent=parentModel.getParentIdentifier();if(angular.isDefined(parent.subject)&&angular.isDefined(parent.identifier)){var response=await CnHttpFactory.instance({path:[parent.subject,parent.identifier].join("/"),data:{select:{column:{column:"participant_id"}}}}).query();var participant_id=response.data.participant_id;var response=await CnHttpFactory.instance({path:["participant",participant_id,"address"].join("/"),data:{select:{column:["id","rank","summary"]},modifier:{where:{column:"address.active",operator:"=",value:true},order:{rank:false}}}}).query();await parentModel.metadata.getPromise();parentModel.metadata.columnList.address_id.enumList=response.data.reduce((list,item)=>{list.push({value:item.id,name:item.summary});return list},[])}await this.$$onNew(record)};this.onAdd=function(record){if(null==record.user_id)record.address_id=null;return this.$$onAdd(record)}};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnAppointmentCalendarFactory",["CnBaseCalendarFactory","CnSession",function(CnBaseCalendarFactory,CnSession){var object=function(parentModel){CnBaseCalendarFactory.construct(this,parentModel);this.currentView="month";delete this.settings.dayClick;this.onCalendar=async function(replace,minDate,maxDate,ignoreParent){replace=true;var loadMinDate=this.getLoadMinDate(replace,minDate);var loadMaxDate=this.getLoadMaxDate(replace,maxDate);await this.$$onCalendar(replace,minDate,maxDate,true);this.cache.forEach((item,index,array)=>{array[index]=getEventFromAppointment(item,CnSession.user.timezone)})}};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnAppointmentListFactory",["CnBaseListFactory",function(CnBaseListFactory){var object=function(parentModel){CnBaseListFactory.construct(this,parentModel);this.onDelete=async function(record){await this.$$onDelete(record);parentModel.calendarModel.cache=parentModel.calendarModel.cache.filter(e=>e.getIdentifier()!=record.getIdentifier())}};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnAppointmentViewFactory",["CnBaseViewFactory","CnHttpFactory","CnModalMessageFactory",function(CnBaseViewFactory,CnHttpFactory,CnModalMessageFactory){var object=function(parentModel,root){CnBaseViewFactory.construct(this,parentModel,root);angular.extend(this,{cancelAppointment:async function(){var modal=CnModalMessageFactory.instance({title:"Please Wait",message:"The appointment is being cancelled, please wait.",block:true});modal.show();try{await CnHttpFactory.instance({path:this.parentModel.getServiceResourcePath(this.record.getIdentifier()),data:{outcome:"cancelled"}}).patch()}finally{modal.close()}},onView:async function(force){await this.$$onView(force);if(null==this.record.appointment_type)this.record.appointment_type="(none)";var upcoming=moment().isBefore(this.record.datetime,"minute");parentModel.getDeleteEnabled=function(){return parentModel.$$getDeleteEnabled()&&upcoming};parentModel.getEditEnabled=function(){return parentModel.$$getEditEnabled()&&upcoming};if("home"==this.record.type){var response=await CnHttpFactory.instance({path:"interview/"+this.record.interview_id,data:{select:{column:{column:"participant_id"}}}}).query();var response=await CnHttpFactory.instance({path:["participant",response.data.participant_id,"address"].join("/"),data:{select:{column:["id","rank","summary"]},modifier:{where:{column:"address.active",operator:"=",value:true},order:{rank:false}}}}).query();await parentModel.metadata.getPromise();parentModel.metadata.columnList.address_id.enumList=response.data.reduce((list,item)=>{list.push({value:item.id,name:item.summary});return list},[])}}})};return{instance:function(parentModel,root){return new object(parentModel,root)}}}]);cenozo.providers.factory("CnAppointmentModelFactory",["CnBaseModelFactory","CnAppointmentAddFactory","CnAppointmentCalendarFactory","CnAppointmentListFactory","CnAppointmentViewFactory","CnSession","CnHttpFactory","$state",function(CnBaseModelFactory,CnAppointmentAddFactory,CnAppointmentCalendarFactory,CnAppointmentListFactory,CnAppointmentViewFactory,CnSession,CnHttpFactory,$state){var object=function(site){if(!angular.isObject(site)||angular.isUndefined(site.id))throw new Error("Tried to create CnAppointmentModel without specifying the site.");CnBaseModelFactory.construct(this,module);this.addModel=CnAppointmentAddFactory.instance(this);this.calendarModel=CnAppointmentCalendarFactory.instance(this);this.listModel=CnAppointmentListFactory.instance(this);this.viewModel=CnAppointmentViewFactory.instance(this,site.id==CnSession.site.id);this.site=site;this.type=$state.params.type;module.getInput("user_id").default={id:CnSession.user.id,formatted:CnSession.user.firstName+" "+CnSession.user.lastName+" ("+CnSession.user.name+")"};this.getServiceData=function(type,columnRestrictLists){this.type=$state.params.type;var data=this.$$getServiceData(type,columnRestrictLists);if("calendar"==type||"list"==type){if("appointment"==this.getSubjectFromState())data.restricted_site_id=this.site.id;data.qnaire_type=this.type;if("calendar"==type){data.select={column:["datetime","outcome",{table:"appointment_type",column:"color"}]};if("home"==this.type){data.select.column.push({table:"address",column:"postcode"})}}}return data};this.getAddEnabled=function(){return"appointment"!=this.getSubjectFromState()&&this.$$getAddEnabled()};this.transitionToParentListState=async function(subject){this.type=$state.params.type;if(angular.isUndefined(subject))subject="^";await $state.go(subject+".list",{type:this.type,identifier:this.site.getIdentifier()})};this.transitionToAddState=async function(){this.type=$state.params.type;var params={type:this.type,parentIdentifier:$state.params.identifier};var response=await CnHttpFactory.instance({path:"interview/"+$state.params.identifier,data:{select:{column:[{table:"effective_site",column:"name"}]}}}).get();if(response.data.name)params.site="name="+response.data.name;await $state.go("^.add_"+this.module.subject.snake,params)};this.transitionToListState=async function(record){this.type=$state.params.type;await $state.go(this.module.subject.snake+".list",{type:this.type,identifier:this.site.getIdentifier()})};this.transitionToViewState=async function(record){this.type=$state.params.type;var params={type:this.type,identifier:record.getIdentifier()};var response=await CnHttpFactory.instance({path:"appointment/"+record.getIdentifier(),data:{select:{column:[{table:"effective_site",column:"name"}]}}}).get();if(response.data.name)params.site="name="+response.data.name;await $state.go(this.module.subject.snake+".view",params)};this.transitionToLastState=async function(){this.type=$state.params.type;var parent=this.getParentIdentifier();await $state.go(parent.subject+".view",{type:this.type,identifier:parent.identifier})};this.transitionToParentViewState=async function(subject,identifier){this.type=$state.params.type;var params={identifier:identifier};if("interview"==subject)params.type=this.type;await $state.go(subject+".view",params)};this.setupBreadcrumbTrail=function(){this.type=$state.params.type;this.$$setupBreadcrumbTrail();if(this.type){var crumb=CnSession.breadcrumbTrail.findByProperty("title","Appointment");if(!crumb)var crumb=CnSession.breadcrumbTrail.findByProperty("title","Appointments");if(crumb)crumb.title=this.type[0].toUpperCase()+this.type.substring(1)+" "+crumb.title}};this.getMetadata=async function(){await this.$$getMetadata();this.metadata.columnList.user_id.required=true;this.metadata.columnList.address_id.required=true;var response=await CnHttpFactory.instance({path:"appointment_type",data:{select:{column:["id","name","qnaire_id"]},modifier:{order:"name",limit:1e3}}}).query();this.metadata.columnList.appointment_type_id.qnaireList=response.data.reduce((list,item)=>{if(angular.isUndefined(list[item.qnaire_id]))list[item.qnaire_id]=[];list[item.qnaire_id].push({value:item.id,name:item.name});return list},{});this.metadata.columnList.appointment_type_id.enumList=[]};this.getTypeaheadData=function(input,viewValue){var data=this.$$getTypeaheadData(input,viewValue);if("user"==input.typeahead.table){data.modifier.where.unshift({bracket:true,open:true});data.modifier.where.push({bracket:true,open:false});data.modifier.where.push({column:"user.active",operator:"=",value:true});if(this.site)data.restricted_site_id=this.site.id}return data}};return{siteInstanceList:{},forSite:function(site){if(!angular.isObject(site)){$state.go("error.404");throw'Cannot find site matching identifier "'+site+'", redirecting to 404.'}if(angular.isUndefined(this.siteInstanceList[site.id])){this.siteInstanceList[site.id]=new object(site)}if($state.params.type)this.siteInstanceList[site.id].type=$state.params.type;return this.siteInstanceList[site.id]},instance:function(){var site=null;var currentState=$state.current.name.split(".")[1];if("calendar"==currentState||"list"==currentState){if(angular.isDefined($state.params.identifier)){var identifier=$state.params.identifier.split("=");if(2==identifier.length)site=CnSession.siteList.findByProperty(identifier[0],identifier[1])}}else if("add_appointment"==currentState||"view"==currentState){if(angular.isDefined($state.params.site)){var identifier=$state.params.site.split("=");if(2==identifier.length)site=CnSession.siteList.findByProperty(identifier[0],identifier[1])}}if(null==site)site=CnSession.site;if(angular.isUndefined(site.getIdentifier))site.getIdentifier=function(){return"name="+this.name};return this.forSite(site)}}}])}});
