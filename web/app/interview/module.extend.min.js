define([cenozoApp.module("interview").getFileUrl("module.js")],function(){"use strict";var module=cenozoApp.module("interview");cenozo.insertPropertyAfter(module.columnList,"uid","qnaire",{column:"qnaire.name",title:"Questionnaire"});module.addInput("","future_appointment",{type:"hidden"});module.addInput("","last_participation_consent",{type:"hidden"});module.addInput("","qnaire_id",{title:"Questionnaire",type:"enum",isConstant:true},"participant");cenozo.providers.decorator("CnInterviewListFactory",["$delegate","CnHttpFactory",function($delegate,CnHttpFactory){var instance=$delegate.instance;$delegate.instance=function(parentModel){var object=instance(parentModel);object.afterList(async function(){object.parentModel.getAddEnabled=function(){return false};var path=object.parentModel.getServiceCollectionPath();if("participant"==object.parentModel.getSubjectFromState()&&null!==path.match(/participant\/[^\/]+\/interview/)){var queueRank=null;var qnaireRank=null;var lastInterview=null;var response=await CnHttpFactory.instance({path:path,data:{modifier:{order:{"qnaire.rank":true},limit:1},select:{column:[{table:"qnaire",column:"rank"},"end_datetime"]}},onError:function(){}}).query();if(0<response.data.length)lastInterview=response.data[0];var response=await CnHttpFactory.instance({path:path.replace("/interview",""),data:{select:{column:[{table:"queue",column:"rank",alias:"queueRank"},{table:"qnaire",column:"rank",alias:"qnaireRank"}]}},onError:function(){}}).query();queueRank=response.data.queueRank;qnaireRank=response.data.qnaireRank;object.parentModel.getAddEnabled=function(){return object.parentModel.$$getAddEnabled()&&null!=queueRank&&null!=qnaireRank&&(null==lastInterview||null!=lastInterview.end_datetime&&lastInterview.rank!=qnaireRank)}}});return object};return $delegate}]);cenozo.providers.decorator("CnInterviewViewFactory",["$delegate","$state",function($delegate,$state){var instance=$delegate.instance;$delegate.instance=function(parentModel,root){var object=instance(parentModel,root);object.defaultTab="appointment";function getAppointmentEnabled(type){var completed=null!==object.record.end_datetime;var participating=false!==object.record.last_participation_consent;var future=object.record.future_appointment;return"add"==type?!completed&&participating&&!future:future}function updateEnableFunctions(){object.appointmentModel.getAddEnabled=function(){return angular.isDefined(object.appointmentModel.module.actions.add)&&getAppointmentEnabled("add")};object.appointmentModel.getDeleteEnabled=function(){return angular.isDefined(object.appointmentModel.module.actions.delete)&&getAppointmentEnabled("delete")}}object.onView=async function(force){await object.$$onView(force);if($state.params.type!=object.record.type){await $state.go("error.404");throw new Error("Interview type does not match state parameters, redirecting to 404.")}if(angular.isDefined(object.appointmentModel))updateEnableFunctions()};async function init(){await object.deferred.promise;if(angular.isDefined(object.appointmentModel)){object.appointmentModel.listModel.onDelete=async function(record){await object.appointmentModel.listModel.$$onDelete(record);await object.onView()}}}init();return object};return $delegate}]);cenozo.providers.decorator("CnInterviewModelFactory",["$delegate","$state","CnHttpFactory",function($delegate,$state,CnHttpFactory){var instance=$delegate.instance;function extendObject(object){object.type=$state.params.type;angular.extend(object,{getBreadcrumbTitle:function(){var qnaire=object.metadata.columnList.qnaire_id.enumList.findByProperty("value",object.viewModel.record.qnaire_id);return qnaire?qnaire.name:"unknown"},transitionToViewState:async function(record){await $state.go(object.module.subject.snake+".view",{type:record.type,identifier:record.getIdentifier()})},getMetadata:async function(){await object.$$getMetadata();var response=await CnHttpFactory.instance({path:"qnaire",data:{select:{column:["id","name"]},modifier:{order:"rank"}}}).query();object.metadata.columnList.qnaire_id.enumList=[];response.data.forEach(function(item){object.metadata.columnList.qnaire_id.enumList.push({value:item.id,name:item.name})})}})}extendObject($delegate.root);$delegate.instance=function(){var object=instance();extendObject(object);return object};return $delegate}])});
