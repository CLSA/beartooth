cenozoApp.defineModule({name:"appointment_mail",dependencies:"trace",models:["add","list","view"],create:module=>{angular.extend(module,{identifier:{parent:{subject:"site",column:"site.name"}},name:{singular:"appointment mail template",plural:"appointment mail templates",possessive:"appointment mail template's"},columnList:{site:{column:"site.name",title:"Site"},qnaire:{column:"qnaire.type",title:"Questionnaire"},appointment_type:{column:"appointment_type.name",title:"Special Type"},language:{column:"language.name",title:"Language"},delay:{title:"Delay (days)"},subject:{title:"Subject"}},defaultOrder:{column:"delay",reverse:false}});module.addInputGroup("",{site_id:{title:"Site",type:"enum",isExcluded:function($state,model){return model.hasAllSites()?"add":true},isConstant:"view"},qnaire_id:{title:"Questionnaire",type:"enum",isConstant:"view"},appointment_type_id:{title:"Special Type",type:"enum",isConstant:"view",isExcluded:function($state,model){return angular.isUndefined(model.metadata.columnList)||angular.isUndefined(model.metadata.columnList.appointment_type_id)||angular.isUndefined(model.metadata.columnList.appointment_type_id.qnaireList)||0==Object.keys(model.metadata.columnList.appointment_type_id.qnaireList).length}},language_id:{title:"Language",type:"enum",isConstant:"view"},from_name:{title:"From Name",type:"string"},from_address:{title:"From Address",type:"string",format:"appointment_mail",help:'Must be in the format "account@domain.name".'},cc_address:{title:"Carbon Copy (CC)",type:"string",help:'May be a comma-delimited list of appointment_mail addresses in the format "account@domain.name".'},bcc_address:{title:"Blind Carbon Copy (BCC)",type:"string",help:'May be a comma-delimited list of appointment_mail addresses in the format "account@domain.name".'},delay:{title:"Delay (days)",type:"string",format:"integer"},subject:{title:"Subject",type:"string"},body:{title:"Body",type:"text"}});module.addExtraOperation("view",{title:"Preview",operation:async function($state,model){await model.viewModel.preview()}});module.addExtraOperation("view",{title:"Validate",operation:async function($state,model){await model.viewModel.validate()}});cenozo.providers.directive("cnAppointmentMailAdd",["CnAppointmentMailModelFactory",function(CnAppointmentMailModelFactory){return{templateUrl:module.getFileUrl("add.tpl.html"),restrict:"E",scope:{model:"=?"},controller:function($scope){if(angular.isUndefined($scope.model))$scope.model=CnAppointmentMailModelFactory.root;$scope.$on("cnRecordAdd ready",async function(event,data){await $scope.model.metadata.getPromise();var cnRecordAddScope=data;var inputArray=cnRecordAddScope.dataArray[0].inputArray;var appointmentTypeIndex=inputArray.findIndexByProperty("key","appointment_type_id");var checkFunction=cnRecordAddScope.check;cnRecordAddScope.check=function(property){checkFunction(property);if("qnaire_id"==property){cnRecordAddScope.record.appointment_type_id=undefined;if(0<Object.keys($scope.model.metadata.columnList.appointment_type_id.qnaireList).length){inputArray[appointmentTypeIndex].enumList=[];if(cnRecordAddScope.record.qnaire_id){inputArray[appointmentTypeIndex].enumList=angular.copy($scope.model.metadata.columnList.appointment_type_id.qnaireList[cnRecordAddScope.record.qnaire_id])}inputArray[appointmentTypeIndex].enumList.unshift({value:undefined,name:"(empty)"})}}};$scope.record={};await $scope.model.addModel.onNew($scope.record);inputArray[appointmentTypeIndex].enumList=[{value:undefined,name:"(empty)"}]})}}}]);cenozo.providers.factory("CnAppointmentMailAddFactory",["CnBaseAddFactory","CnHttpFactory",function(CnBaseAddFactory,CnHttpFactory){var object=function(parentModel){CnBaseAddFactory.construct(this,parentModel);this.onNew=async function(record){await this.$$onNew(record);var parent=this.parentModel.getParentIdentifier();var response=await CnHttpFactory.instance({path:"application/0",data:{select:{column:["mail_name","mail_address"]}}}).get();record.from_name=response.data.mail_name;record.from_address=response.data.mail_address}};return{instance:function(parentModel){return new object(parentModel)}}}]);cenozo.providers.factory("CnAppointmentMailViewFactory",["CnBaseViewFactory","CnSession","CnHttpFactory","CnModalMessageFactory",function(CnBaseViewFactory,CnSession,CnHttpFactory,CnModalMessageFactory){var object=function(parentModel,root){CnBaseViewFactory.construct(this,parentModel,root);this.preview=async function(){var response=await CnHttpFactory.instance({path:"application/"+CnSession.application.id,data:{select:{column:["mail_header","mail_footer"]}}}).get();var body=this.record.body;if(null!=response.data.mail_header)body=response.data.mail_header+"\n"+body;if(null!=response.data.mail_footer)body=body+"\n"+response.data.mail_footer;await CnModalMessageFactory.instance({title:"Mail Preview",message:body,html:true}).show()};this.validate=async function(){var response=await CnHttpFactory.instance({path:this.parentModel.getServiceResourcePath(),data:{select:{column:"validate"}}}).get();var result=JSON.parse(response.data.validate);var message="The subject contains ";message+=null==result||angular.isUndefined(result.subject)?"no errors.\n":"the invalid variable $"+result.subject+"$.";message+="The body contains ";message+=null==result||angular.isUndefined(result.body)?"no errors.\n":"the invalid variable $"+result.body+"$.";await CnModalMessageFactory.instance({title:"Validation Result",message:message}).show()}};return{instance:function(parentModel,root){return new object(parentModel,root)}}}]);cenozo.providers.factory("CnAppointmentMailModelFactory",["CnBaseModelFactory","CnAppointmentMailListFactory","CnAppointmentMailAddFactory","CnAppointmentMailViewFactory","CnSession","CnHttpFactory",function(CnBaseModelFactory,CnAppointmentMailListFactory,CnAppointmentMailAddFactory,CnAppointmentMailViewFactory,CnSession,CnHttpFactory){var object=function(root){CnBaseModelFactory.construct(this,module);this.addModel=CnAppointmentMailAddFactory.instance(this);this.listModel=CnAppointmentMailListFactory.instance(this);this.viewModel=CnAppointmentMailViewFactory.instance(this,root);this.hasAllSites=function(){return CnSession.role.allSites};this.getMetadata=async function(){await this.$$getMetadata();var[siteResponse,qnaireResponse,appointmentTypeResponse,languageResponse]=await Promise.all([CnHttpFactory.instance({path:"site",data:{select:{column:["id","name"]},modifier:{order:"name",limit:1e3}}}).query(),CnHttpFactory.instance({path:"qnaire",data:{select:{column:["id","type"]},modifier:{order:"rank",limit:1e3}}}).query(),CnHttpFactory.instance({path:"appointment_type",data:{select:{column:["id","name","qnaire_id"]},modifier:{order:"name",limit:1e3}}}).query(),CnHttpFactory.instance({path:"language",data:{select:{column:["id","name"]},modifier:{where:{column:"active",operator:"=",value:true},order:"name",limit:1e3}}}).query()]);this.metadata.columnList.site_id.enumList=siteResponse.data.reduce((list,item)=>{list.push({value:item.id,name:item.name});return list},[]);this.metadata.columnList.qnaire_id.enumList=qnaireResponse.data.reduce((list,item)=>{list.push({value:item.id,name:item.type});return list},[]);var qnaireList={};this.metadata.columnList.appointment_type_id.enumList=appointmentTypeResponse.data.reduce((list,item)=>{if(angular.isUndefined(qnaireList[item.qnaire_id]))qnaireList[item.qnaire_id]=[];qnaireList[item.qnaire_id].push({value:item.id,name:item.name});list.push({value:item.id,name:item.name});return list},[{value:"",name:"(empty)"}]);this.metadata.columnList.appointment_type_id.qnaireList=qnaireList;this.metadata.columnList.language_id.enumList=languageResponse.data.reduce((list,item)=>{list.push({value:item.id,name:item.name});return list},[])}};return{root:new object(true),instance:function(){return new object(false)}}}])}});
